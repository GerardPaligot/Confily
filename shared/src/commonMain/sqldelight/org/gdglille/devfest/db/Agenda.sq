import kotlin.collections.List;

CREATE TABLE Schedule(
id TEXT NOT NULL PRIMARY KEY,
order_ INTEGER NOT NULL,
event_id TEXT NOT NULL,
date TEXT NOT NULL,
start_time TEXT NOT NULL,
end_time TEXT NOT NULL,
room TEXT NOT NULL,
title TEXT NOT NULL,
abstract TEXT NOT NULL,
speakers TEXT AS List<String> NOT NULL,
speakers_avatar TEXT AS List<String> NOT NULL,
is_favorite INTEGER AS Boolean NOT NULL DEFAULT 0,
category TEXT NOT NULL,
category_color TEXT,
category_icon TEXT,
level TEXT
);

insertSchedule:
INSERT OR REPLACE INTO Schedule(
id, order_, event_id, date, start_time, end_time, room, title, abstract, category, category_color, category_icon, speakers, speakers_avatar, is_favorite, level
) VALUES (?, ?, ?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

updateSchedule:
UPDATE Schedule SET event_id = ?, order_ = ?, date = ?, start_time = ?, end_time = ?, room = ?, title = ?, abstract = ?, category = ?, category_color = ?, category_icon = ?, speakers = ?, speakers_avatar = ?, level = ? WHERE id == ?;

markAsFavorite:
UPDATE Schedule SET is_favorite = ? WHERE id == ? AND event_id == ?;

selectScheduleItems:
SELECT id, order_, event_id, start_time, end_time, room, title, abstract, category, category_color, category_icon, speakers, speakers_avatar, is_favorite, level FROM Schedule WHERE event_id == ? AND date == ? ORDER BY start_time;

selectScheduleItemsById:
SELECT id, order_, event_id, start_time, end_time, room, title, abstract, category, category_color, category_icon, speakers, speakers_avatar, is_favorite, level FROM Schedule WHERE id IN ? AND event_id = ?;

selectDays:
SELECT DISTINCT date FROM Schedule WHERE event_id = ?;

countScheduleItems:
SELECT count(*) FROM Schedule WHERE event_id == ? AND is_favorite == ?;
