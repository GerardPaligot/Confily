import kotlin.collections.List;

CREATE TABLE Event (
id TEXT NOT NULL PRIMARY KEY,
name TEXT NOT NULL,
formatted_address TEXT AS List<String> NOT NULL,
address TEXT NOT NULL,
latitude REAL NOT NULL,
longitude REAL NOT NULL,
date TEXT NOT NULL,
coc TEXT NOT NULL,
contact_email TEXT NOT NULL,
contact_phone TEXT,
twitter TEXT,
twitter_url TEXT,
linkedin TEXT,
linkedin_url TEXT,
faq_url TEXT NOT NULL,
coc_url TEXT NOT NULL,
updated_at INTEGER NOT NULL
);

CREATE TABLE Partner (
id TEXT NOT NULL PRIMARY KEY,
name TEXT NOT NULL,
description TEXT NOT NULL,
event_id TEXT NOT NULL,
type_id TEXT NOT NULL,
type TEXT NOT NULL,
logo_url TEXT NOT NULL,
site_url TEXT,
twitter_url TEXT,
twitter_message TEXT,
linkedin_url TEXT,
linkedin_message TEXT,
formatted_address TEXT AS List<String>,
address TEXT,
latitude REAL,
longitude REAL
);

CREATE TABLE PartnerType (
order_ INTEGER NOT NULL,
name TEXT NOT NULL PRIMARY KEY
);

insertEvent:
INSERT OR REPLACE INTO Event(
id, name, formatted_address, address, latitude, longitude, date, coc, contact_email, contact_phone, twitter, twitter_url, linkedin, linkedin_url, faq_url, coc_url, updated_at
) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

selectEvent:
SELECT id, name, formatted_address, address, latitude, longitude, date, coc, contact_email, contact_phone, twitter, twitter_url, linkedin, linkedin_url, faq_url, coc_url, updated_at FROM Event WHERE id == ?;

selectCoc:
SELECT coc, contact_email, contact_phone FROM Event WHERE id == ?;

selectUpdatedAt:
SELECT updated_at FROM Event WHERE id == ?;

insertPartnerType:
INSERT OR REPLACE INTO PartnerType(
order_, name
) VALUES (?, ?);

insertPartner:
INSERT OR REPLACE INTO Partner(
id, name, description, event_id, type_id, type, logo_url, site_url, twitter_url, twitter_message, linkedin_url, linkedin_message, formatted_address, address, latitude, longitude
) VALUES (?, ?,?,?, ?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

selectPartnerTypes:
SELECT * FROM PartnerType ORDER BY order_ ASC;

selectPartners:
SELECT id, name, description, logo_url, site_url, twitter_url, twitter_message, linkedin_url, linkedin_message, formatted_address, address, latitude, longitude FROM Partner WHERE event_id == ? AND type_id == ? ORDER BY name ASC;

selectPartner:
SELECT id, name, description, logo_url, site_url, twitter_url, twitter_message, linkedin_url, linkedin_message, formatted_address, address, latitude, longitude FROM Partner WHERE id == ? ORDER BY name ASC;
